# Database Configuration
DB_NAME=jira_sync
DB_USER=postgres
DB_PASSWORD=your_secure_password_here
DB_HOST=localhost  # Use 'postgres' for Docker
DB_PORT=5432

# Redis Configuration (for Docker)
REDIS_HOST=localhost  # Use 'redis' for Docker
REDIS_PORT=6379
REDIS_PASSWORD=  # Optional, leave empty for no auth
REDIS_TTL=110  # Cache TTL in seconds (less than 2-min sync interval)

# JIRA Configuration
# Option 1: Dynamic instances via JSON (supports unlimited instances)
# JIRA_INSTANCES='[{"url":"https://instance1.atlassian.net","username":"user@company.com","api_token":"token1","type":"source","name":"Primary","enabled":true},{"url":"https://instance2.atlassian.net","username":"user@company.com","api_token":"token2","type":"target","name":"Secondary","enabled":true}]'

# Option 2: Config file (create jira_instances.json)
# JIRA_CONFIG_FILE=/path/to/jira_instances.json

# Option 3: Legacy configuration (limited to 2 instances)
JIRA_URL_1=https://your-domain.atlassian.net
JIRA_USERNAME_1=your_jira_email@example.com
JIRA_PASSWORD_1=your_jira_api_token_here

JIRA_URL_2=https://another-domain.atlassian.net
JIRA_USERNAME_2=another_email@example.com
JIRA_PASSWORD_2=another_api_token_here

# JIRA Create credentials (for INUA testing)
JIRA_CREATE_EMAIL=your_jira_email@example.com
JIRA_CREATE_TOKEN=your_jira_api_token_here

# Application Settings
ENV=development  # Options: development, production
LOG_LEVEL=INFO  # Options: DEBUG, INFO, WARNING, ERROR
PYTHONUNBUFFERED=1  # For Docker logging

# API Configuration
API_HOST=0.0.0.0  # For Docker, use 0.0.0.0
API_PORT=8987

# Admin Authentication (REQUIRED - no default for security)
# ⚠️ BREAKING CHANGE: Admin pages now require authentication
# Set a strong, unique key - DO NOT use 'jira-admin-key-2024'
ADMIN_API_KEY=change-this-to-secure-key  # Required for admin access

# Frontend Configuration
NEXT_PUBLIC_API_URL=http://localhost:8987  # Backend API URL

# Frontend Admin Authentication (must match backend ADMIN_API_KEY)
# Note: Create a separate .env.local file in frontend/ directory with:
# BACKEND_URL=http://backend:8987  # For Docker internal network
# ADMIN_API_KEY=same-as-backend-admin-key
# SESSION_SECRET=generate-random-32-char-string  # REQUIRED in production!

# Sync Configuration
SYNC_INTERVAL_MINUTES=2  # How often to sync with JIRA
SYNC_BATCH_SIZE=100  # Number of issues to process per batch
SYNC_ENABLED=true  # Enable/disable automatic sync

# Performance Tuning
MAX_WORKERS=4  # Number of worker threads
CONNECTION_POOL_SIZE=10  # Database connection pool size
REDIS_MAX_CONNECTIONS=50  # Redis connection pool size

# Security Configuration
SECRET_KEY=your_secret_key_here_change_in_production
SESSION_SECRET=generate-random-string-min-32-chars  # REQUIRED in production for frontend sessions
JWT_SECRET_KEY=your_jwt_secret_here_change_in_production  # Future use
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# Security Features (automatically configured):
# - Rate Limiting: 5 login attempts per 15 minutes, then 1-hour block
# - Session Cleanup: Expired sessions cleaned every hour
# - Session Duration: 24 hours (configurable in code)
# - Security Logging: All auth events logged with IP and context

# ============================================
# IMPORTANT NOTES:
# 1. Copy this file to .env and fill in your values
# 2. Never commit .env files to version control
# 3. Admin authentication is now REQUIRED - set ADMIN_API_KEY
# 4. For frontend, create frontend/.env.local with matching ADMIN_API_KEY
# 5. See docs/guides/ADMIN_AUTH_MIGRATION.md for migration guide
# ============================================